% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pickerCascade.R
\name{pickerCascade}
\alias{pickerCascade}
\title{pickerCascade}
\usage{
pickerCascade(inputId, ..., dynhide = FALSE, choicelist = NULL)
}
\arguments{
\item{inputId}{Id of input.}

\item{...}{UI functions to be wrapped (must contain pickerInputs)}

\item{dynhide}{boolean to indicate whether to hide cleared pickerInputs. default = FALSE.}

\item{choicelist}{optional nested list that determines downstream choiceoptions.ÃŸ}
}
\description{
pickerCascade
}
\examples{

library(shiny)

ui <- function() {
  fluidPage(
    pickerCascade(
      "theId",
      shiny::fluidRow(
        shiny::column(width = 4, shinyWidgets::pickerInput("one", "one", 1:10)),
        shiny::column(width = 4, shinyWidgets::pickerInput("two", "Two", 2:10)),
        shiny::column(width = 4, shinyWidgets::pickerInput("tre", "Tre", 3:10))
      ),
      dynhide = TRUE
    ),
    shiny::textOutput("text")
  )
}

server <- function(input, output){

  observeEvent(input$theId, {
    print(input$theId)
    print(typeof(input$theId))
    print(class(input$theId))
  })
  output$text <- shiny::renderText({input$theId[[2]]})

}

if(interactive()) {
 shinyApp(ui, server)
}

}
